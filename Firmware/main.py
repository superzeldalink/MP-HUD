from machine import Pin, I2C
from ssd1306 import SSD1306_I2C
import UILib as ui
import utime

WIDTH  = 128 # SSD1306 horizontal resolution
HEIGHT = 64   # SSD1306 vertical resolution

i2c = I2C(1,scl=Pin(3),sda=Pin(2),freq=200000)  # start I2C on I2C1 (GPIO 26/27)
oled = SSD1306_I2C(WIDTH, HEIGHT, i2c) # oled controller

# Raspberry Pi logo as 32x32 bytearray
#buffer = bytearray(b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|?\x00\x01\x86@\x80\x01\x01\x80\x80\x01\x11\x88\x80\x01\x05\xa0\x80\x00\x83\xc1\x00\x00C\xe3\x00\x00~\xfc\x00\x00L'\x00\x00\x9c\x11\x00\x00\xbf\xfd\x00\x00\xe1\x87\x00\x01\xc1\x83\x80\x02A\x82@\x02A\x82@\x02\xc1\xc2@\x02\xf6>\xc0\x01\xfc=\x80\x01\x18\x18\x80\x01\x88\x10\x80\x00\x8c!\x00\x00\x87\xf1\x00\x00\x7f\xf6\x00\x008\x1c\x00\x00\x0c \x00\x00\x03\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")
buffer = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00808\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c0p\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e0\xe0\x00\x00\x00\x00\x00\x0f\x01\xc0\x03\x80\x00\x00\x1f\xf71\xc0\x00\x01\xc0\x00\x00\x0f\x03\xc0\x03\x80\x00\x00\x1f\xfb\xb3\x80\xe0\x01\xc0\x00\x00\x0f\x83\xc0\x03\x80\x00\x00\x1f\xfd\xb3\x00\xe0\x01\xc0\x00\x00\x0f\x83\xc0\x03\x80\x00\x00\x18\x1c\xfc\x00\xe0\x01\xc0\x00\x00\x0f\x87\xc7\xf3\x9e~?\x18\x1d\xfe?\xf3\xf9\xc0\x00\x00\x0f\xc6\xcf\xf3\xbc\xff?\x18\x1d\xff?\xf7\xfd\xc0\x00\x00\x0f\xc6\xcc;\xf8\xc3\xb8\x1b\xfb\xff8\xe6\x1d\xc0\x00\x00\x0e\xce\xc4;\xe1\xc3\xb8\x1f\xfb\xff\xb0\xe2\x1d\xc0\x00\x00\x0e\xec\xc7\xfb\xf1\xff\xb8\x1f\xe3\xff\xb0\xe3\xfd\xc0\x00\x00\x0e\xec\xcf\xfb\xf1\xff\xb8\x18\x03\xff\xb0\xe7\xfd\xc0\x00\x00\x0e|\xdc;\xb9\xc3\xb8\x18\x03\xff\xb0\xe6\x1d\xc0\x00\x00\x0ex\xdc{\x9d\xe3\xb8\x18\x03\xff\xb0\xee\x1d\xc0\x00\x00\x0ex\xdf\xfb\x9c\xff8\x18\x03\xff\xb0\xf7\xfd\xc0\x00\x00\x0e8\xcf\xfb\x8e~8\x18\x03\xff\xb0\xf7\xed\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\x80\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00')

rtc = machine.RTC()
rtc.datetime((2022, 5, 27, 5, 14, 42, 59, 0))

ui.initUI(oled, WIDTH, HEIGHT)

def FormatDate(datetime):
    day = str(datetime[2])
    year = str(datetime[0])
    date = {
        0: "Sunday",
        1: "Monday",
        2: "Tuesday",
        3: "Wednesday",
        4: "Thursday",
        5: "Friday",
        6: "Saturday"
    }
    
    
    month = {
        1: "January",
        2: "February",
        3: "March",
        4: "April",
        5: "May",
        6: "June",
        7: "July",
        8: "August",
        9: "September",
        10: "October",
        11: "November",
        12: "December"
    }
       
    output = "{} {} {}".format(day ,month.get(datetime[1]), year)

    return output


while True:
    oled.fill(0)
    
    ui.printGraphic(buffer, 128, 47, pos_x=0, pos_y = 0)
    #print(len(array))

    # Send the FrameBuffer content to the LCD
    oled.show()